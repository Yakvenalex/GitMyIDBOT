from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
from create_bot import kb_list
from utils.db import get_user_by_id, add_user, update_bot_open_status
from keyboards.kb import main_contact_kb, channels_kb
from utils.utils import is_user_subscribed

router = Router()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(CommandStart())
async def start(message: Message):
    telegram_id = message.from_user.id
    user_data = await get_user_by_id(telegram_id)

    if user_data is None:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await add_user(
            telegram_id=telegram_id,
            username=message.from_user.username,
            first_name=message.from_user.first_name
        )
        bot_open = False
    else:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å bot_open –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot_open = user_data.get('bot_open', False)  # –í—Ç–æ—Ä–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é False

    if bot_open:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=main_contact_kb(telegram_id))
    else:
        # –ò–Ω–∞—á–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞–Ω–∞–ª–∞–º–∏ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
        await message.answer(
            "–î–ª—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –∫–∞–Ω–∞–ª—ã:",
            reply_markup=channels_kb(kb_list)
        )


@router.callback_query(F.data == 'check_subscription')
async def check_subs_func(call: CallbackQuery):
    await call.answer('–ó–∞–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –∫–∞–Ω–∞–ª—ã')

    for channel in kb_list:
        label = channel.get('label')
        channel_url = channel.get('url')
        telegram_id = call.from_user.id
        check = await is_user_subscribed(channel_url, telegram_id)
        if check is False:
            await call.message.answer(f"‚ùå –≤—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª üëâ {label}",
                                      reply_markup=channels_kb(kb_list))
            return False

    await update_bot_open_status(telegram_id=call.from_user.id, bot_open=True)
    await call.message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –±–æ—Ç–∞",
                              reply_markup=main_contact_kb(call.from_user.id))


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã "MY ID"
@router.message(F.text == 'üÜî MY INFO')
async def handle_my_id(message: Message):
    user_id = message.from_user.id
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
    username = message.from_user.username or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"

    await message.answer(
        f"üîç –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n\n"
        f"üÜî ID: <code>{user_id}</code>\n"
        f"üë§ –ò–º—è: {first_name} {last_name}\n"
        f"üîó Username: @{username}"
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.message(F.user_shared)
async def handle_user(message: Message):
    user_id = message.user_shared.user_id
    request_id = message.user_shared.request_id

    if request_id == 1:
        await message.answer(f"üë§ –í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: <code>{user_id}</code>")
    elif request_id == 4:
        await message.answer(f"ü§ñ –í—ã –≤—ã–±—Ä–∞–ª–∏ –±–æ—Ç–∞ —Å ID: <code>{user_id}</code>")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —á–∞—Ç–∞ –∏–ª–∏ –∫–∞–Ω–∞–ª–∞
@router.message(F.chat_shared)
async def handle_chat_or_channel(message: Message):
    chat_id = message.chat_shared.chat_id
    request_id = message.chat_shared.request_id

    if request_id == 2:
        await message.answer(f"üë• –í—ã –≤—ã–±—Ä–∞–ª–∏ –≥—Ä—É–ø–ø—É —Å ID: <code>{chat_id}</code>")
    elif request_id == 3:
        await message.answer(f"üì¢ –í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞–Ω–∞–ª —Å ID: <code>{chat_id}</code>")